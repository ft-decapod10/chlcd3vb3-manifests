# Source: thanos/templates/bucketweb/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-bucketweb
  labels:
    app.kubernetes.io/name: thanos
    helm.sh/chart: thanos-3.4.0
    app.kubernetes.io/instance: thanos
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: bucketweb
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: thanos
      app.kubernetes.io/instance: thanos
      app.kubernetes.io/component: bucketweb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: thanos
        helm.sh/chart: thanos-3.4.0
        app.kubernetes.io/instance: thanos
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: bucketweb
      annotations:
        checksum/ojbstore-configuration: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
    spec:
      
      serviceAccount: thanos-bucketweb
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: thanos
                    app.kubernetes.io/instance: thanos
                    app.kubernetes.io/component: bucketweb
                namespaces:
                  - "lma"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      nodeSelector:
        taco-lma: enabled
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
      containers:
        - name: bucketweb
          image: docker.io/bitnami/thanos:0.17.2-scratch-r1
          imagePullPolicy: "IfNotPresent"
          args:
            - tools
            - bucket
            - web
            - --http-address=0.0.0.0:8080
            - --log.level=info
            - --objstore.config-file=/conf/objstore.yml
            - --refresh=30m
            - --timeout=5m
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: objstore-config
              mountPath: /conf
      volumes:
        - name: objstore-config
          secret:
            secretName: taco-objstore-secret
